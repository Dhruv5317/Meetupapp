{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Next-js\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupCollections.image,\n    title: props.meetupCollections.title,\n    address: props.meetupCollections.address,\n    description: props.meetupCollections.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://user2:fpBe2ksiF1gZbJI2@cluster0.fw0ba0c.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://user2:fpBe2ksiF1gZbJI2@cluster0.fw0ba0c.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const selectedMeetup = await meetupCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/React/Next-js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupCollections","image","title","address","description","getStaticPaths","client","connect","db","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,iBAAN,CAAwBC,KADjC;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,iBAAN,CAAwBE,KAFjC;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,iBAAN,CAAwBG,OAHnC;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,iBAAN,CAAwBI;AAJvC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMR,iBAAiB,GAAGQ,EAAE,CAACC,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMV,iBAAiB,CAACW,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMR,iBAAiB,GAAGQ,EAAE,CAACC,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMxB,iBAAiB,CAACyB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEf,QAAQ,CAACuB,QAAD;AADwC,GAA1B,CAA7B;AAGAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACL2B,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAACH,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADO;AAEVnB,QAAAA,KAAK,EAACsB,cAAc,CAACtB;AAFX;AADP;AADF,GAAP;AASD;AACD,eAAeJ,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupCollections.image}\r\n      title={props.meetupCollections.title}\r\n      address={props.meetupCollections.address}\r\n      description={props.meetupCollections.description}\r\n    />\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://user2:fpBe2ksiF1gZbJI2@cluster0.fw0ba0c.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const meetups = await meetupCollections.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://user2:fpBe2ksiF1gZbJI2@cluster0.fw0ba0c.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupCollections.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id:selectedMeetup._id.toString(),\r\n        title:selectedMeetup.title,\r\n        \r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}